services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_DB: notification_service
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notification_user -d notification_service"]
      interval: 5s
      retries: 10
      start_period: 5s

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  notification-service:
    build: .
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://notification_user:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/notification_service
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build: .
    command: celery -A app.core.celery_app worker --loglevel=DEBUG -Q notifications,instant --hostname=worker1@%h
    hostname: celery-worker-1
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure
    environment:
      - DATABASE_URL=postgresql+asyncpg://notification_user:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/notification_service
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
      - CELERY_LOG_LEVEL=DEBUG

  celery-webhook-worker:
    build: .
    command: celery -A app.core.celery_app worker --loglevel=DEBUG -Q webhooks --hostname=webhook-worker@%h
    hostname: celery-webhook-worker
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: on-failure
    environment:
      - DATABASE_URL=postgresql+asyncpg://notification_user:${POSTGRES_PASSWORD:-dev_password}@postgres:5432/notification_service
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
      - CELERY_LOG_LEVEL=DEBUG

  flower:
    build: .
    command: celery -A app.core.celery_app flower --port=5555 --conf=/app/flowerconfig.py
    ports:
      - "5557:5555"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_UNAUTHENTICATED_API=true
    volumes:
      - .:/app
      - flower_data:/data

volumes:
  postgres_data:
  redis_data:
  flower_data: